from scrapy.spider import BaseSpider
from scrapy.selector import HtmlXPathSelector
from scrapy.http import Request

from product.items import Product

def check_product_availability(item):
    if item == "/estore/images/checkmark.gif":
        return "Y"
    else:
        return "N"

def split_title(title):
    splitted_text = title.split(',')
    new_title = splitted_text[0]
    splitted_text.pop(0)
    new_description = ""
    
    for i in splitted_text:
        new_description += i
        
    return (new_title, new_description)
        

class TheSourceSpider(BaseSpider):
    name = "thesource"
    allowed_domains = ["thesource.ca"]
    start_urls = [
        "http://www.thesource.ca/estore/category.aspx?language=en-CA&catalog=Online&category=Acerlaptop",
        "http://www.thesource.ca/estore/category.aspx?language=en-CA&catalog=Online&category=Acerlaptop&sort=6&pagenum=2",
        "http://www.thesource.ca/estore/category.aspx?language=en-CA&catalog=Online&category=Asuslaptop",
        "http://www.thesource.ca/estore/category.aspx?language=en-CA&catalog=Online&category=Toshibalaptop&sort=1&pagenum=2",
        "http://www.thesource.ca/estore/category.aspx?language=en-CA&catalog=Online&category=Gatewaylaptop",
        "http://www.thesource.ca/estore/category.aspx?language=en-CA&catalog=Online&category=Hplaptop",
        "http://www.thesource.ca/estore/category.aspx?language=en-CA&catalog=Online&category=Toshibalaptop"
    ]
    
    def parse(self, response):
        hxs = HtmlXPathSelector(response)
        sites = hxs.select('//*[@id="ListViewProductList_ProductDataList"]')
       


        for site in sites:
            urls = site.select("//a[contains(@id,'ProductName')]/@href").extract()
            
            
        for url in urls:
            yield Request(url, callback=self.parse_detail_page)
           
            
    def parse_detail_page(self, response):
        hxs = HtmlXPathSelector(response)
        sites = hxs.select('//table[@id="table3"]')
        items = []
        
        for site in sites:
            item = Product()
            title = site.select('//span[@id="product_productname"]/text()').extract()
            price = site.select('//span[@id="product_productPricing_price"]/text()').extract()
            online = site.select('//span[@id = "product_lblonline"]/ancestor::*[1]/*[1]/@src').extract()
            store = site.select('//span[@id = "product_lblinstore"]/ancestor::*[1]/*[1]/@src').extract()
            img = site.select('(//img[@id="product_productimage"])[1]/@src').extract()
            
            item["online"] = check_product_availability(online[0])
            item["store"] = check_product_availability(store[0])


            

            item['title'], item['description'] = split_title(title[0])
            item['price'] = price[0]
            item['url'] = response.url
           
           
            items.append(item)
            
        return items
